package net.flytre.gen.io;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Scanner;

public class FileHandler {

    private static String output;


    static Scanner get(String filename) {
        try {
            return new Scanner(new File("resources/" + filename));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
            return null;
        }
    }

    public static String readFile(String path) {
        try {
            return Files.readString(Paths.get(path), StandardCharsets.US_ASCII);
        } catch (IOException e) {
            return null;
        }

    }

    static void setOutput(String location) {
        output = location;
    }

    static void print(String msg) {
        File out = new File(output);
        try {
            out.getParentFile().mkdirs();
            out.createNewFile();
        } catch (IOException e) {
            e.printStackTrace();
        }

        try (PrintWriter toFile = new PrintWriter(new FileWriter(output, true))) {
            toFile.println(msg);
            toFile.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    static void createResourcePack(String name) {
        try {
            boolean b = (new File(name)).mkdirs();
            boolean b2 = (new File(name + "/pack.mcmeta")).createNewFile();

            setOutput(name + "/pack.mcmeta");
            print("""
                    {
                      "pack": {
                        "pack_format": 7,
                        "description": "Custom resource pack generated by Flytre"
                      }
                    }""");

            boolean b4 = (new File(name + "/assets/minecraft/textures/item")).mkdirs();
            boolean b5 = (new File(name + "/assets/minecraft/models/item")).mkdirs();


        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static boolean deleteDirectory(String dir) {
        File directoryToBeDeleted = new File(dir);

        File[] allContents = directoryToBeDeleted.listFiles();

        if (allContents != null) {
            for (File file : allContents) {
                deleteDirectory(file);
            }
        }
        return directoryToBeDeleted.delete();
    }

    static boolean deleteDirectory(File directory) {
        File[] allContents = directory.listFiles();
        if (allContents != null)
            for (File file : allContents)
                deleteDirectory(file);
        return directory.delete();
    }

    public static void createDatapack(String name) {
        try {
            boolean b = (new File(name)).mkdirs();

            boolean b2 = (new File(name + "/pack.mcmeta")).createNewFile();

            FileHandler.setOutput(name + "/pack.mcmeta");
            FileHandler.print("""
                    {
                      "pack": {
                        "pack_format": 7,
                        "description": "Functions generated by Flytre"
                      }
                    }""");
            boolean b4 = (new File(name + "/data/flytre/functions")).mkdirs();

            boolean b5 = (new File(name + "/data/minecraft/tags/functions")).mkdirs();

            boolean b6 = (new File(name + "/data/flytre/loot_tables")).mkdirs();


        } catch (IOException e) {
            e.printStackTrace();
        }
    }

}
